import { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import jsPDF from "jspdf";
import autoTable from "jspdf-autotable";

export default function EmpPort() {
  const navigate = useNavigate();
  const [validSession, setValidSession] = useState(true);
  const [activeModal, setActiveModal] = useState(null);

  const payslips = [
    { month: "December 2023", salary: 15000, pt: 750, issue: "02 January 2024" },
    { month: "January 2024", salary: 30000, pt: 1500, issue: "01 February 2024" },
    { month: "February 2024", salary: 30000, pt: 1500, issue: "01 March 2024" },
    { month: "March 2024", salary: 30000, pt: 1500, issue: "01 April 2024" },
    { month: "April 2024", salary: 32400, pt: 1620, issue: "02 May 2024" },
    { month: "May 2024", salary: 32400, pt: 1620, issue: "01 June 2024" },
    { month: "June 2024", salary: 32400, pt: 1620, issue: "01 July 2024" },
    { month: "July 2024", salary: 32400, pt: 1620, issue: "01 August 2024" },
    { month: "August 2024", salary: 32400, pt: 1620, issue: "02 September 2024" },
    { month: "September 2024", salary: 32400, pt: 1620, issue: "01 October 2024" },
    { month: "October 2024", salary: 32400, pt: 1620, issue: "01 November 2024" },
    { month: "November 2024", salary: 32400, pt: 1620, issue: "02 December 2024" },
    { month: "December 2024", salary: 32400, pt: 1620, issue: "02 January 2025" },
    { month: "January 2025", salary: 32400, pt: 1620, issue: "01 February 2025" },
    { month: "February 2025", salary: 32400, pt: 1620, issue: "01 March 2025" },
    { month: "March 2025", salary: 32400, pt: 1620, issue: "01 April 2025" },
    { month: "April 2025", salary: 35640, pt: 1782, issue: "01 May 2025" },
    { month: "May 2025", salary: 24118, pt: 1206, issue: "02 June 2025" },
  ];

    const generatePayslip = (p) => {
    const doc = new jsPDF();
    const netSalary = p.salary - p.pt;

    doc.addImage("/email_logo.png", "PNG", 10, 10, 40, 20);
    doc.setFontSize(14);
    doc.text("Repository Juncture Resource Infinity", 55, 18);
    doc.setFontSize(10);
    doc.text("Borobotola, Near Dishari Club, Garia Station Road, Kolkata -700084", 55, 24);
    doc.text("info@rjrinfinity.com | +91-9830410335", 55, 30);
    doc.text(`GSTN: 19AVRPC2913J1ZDz`, 55, 36);

    doc.setFontSize(12);
    doc.text(`Payslip for: ${p.month}`, 14, 50);
    doc.text(`Issue Date: ${p.issue}`, 150, 50);

    autoTable(doc, {
      startY: 60,
      head: [["Employee Details", ""]],
      body: [
        ["Employee Name", "Soutam Deb"],
        ["Employee ID", "ITES-022"],
        ["Department", "IT & Infrastructure"],
      ],
      theme: "grid",
    });

    autoTable(doc, {
      startY: doc.lastAutoTable.finalY + 5,
      head: [["Earnings", "Amount (Rs.)"]],
      body: [["Gross Salary", p.salary]],
      theme: "grid",
    });

    autoTable(doc, {
      startY: doc.lastAutoTable.finalY + 5,
      head: [["Deductions", "Amount (Rs.)"]],
      body: [["Professional Tax", p.pt]],
      theme: "grid",
    });

    autoTable(doc, {
      startY: doc.lastAutoTable.finalY + 5,
      head: [["Net Salary", "Amount (Rs.)"]],
      body: [["Total Payable", netSalary]],
      theme: "grid",
    });

    autoTable(doc, {
      startY: doc.lastAutoTable.finalY + 10,
      head: [["Remarks"]],
      body: [["Digitally verified. This payslip is generated by system and requires no physical signature."]],
      theme: "plain",
    });

    // doc.addImage("/signature_stamp.png", "PNG", 140, doc.lastAutoTable.finalY + 10, 40, 20);

    doc.save(`Payslip_${p.month.replace(" ", "_")}.pdf`);
  };

  useEffect(() => {
    const cookies = document.cookie.split(";").map((c) => c.trim());
    const sessionCookie = cookies.find((c) => c.startsWith("session_user="));
    const sessionId = localStorage.getItem("session_id");

    if (!sessionCookie || !sessionId) {
      navigate("/portal/empcore");
    }

    const handleStorage = (event) => {
      if (event.key === "session_id") {
        setValidSession(false);
        alert("Your session was ended due to another login.");
        navigate("/portal/empcore");
      }
    };

    window.addEventListener("storage", handleStorage);
    return () => window.removeEventListener("storage", handleStorage);
  }, [navigate]);

  const handleLogout = () => {
    document.cookie = "session_user=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;";
    localStorage.removeItem("session_user");
    localStorage.removeItem("session_id");
    navigate("/portal/empcore");
  };

  if (!validSession) return null;

  return (
    <div className="min-h-screen bg-gray-100 p-6">
      <div className="flex justify-between items-center mb-6">
        <h1 className="text-2xl font-bold">Hi Soutam Deb</h1>
        <h2 className="text-xs font-bold text-red-800">Please backup your required documents. The credentials will expire on 1st September 2025.</h2>
        <button
          onClick={handleLogout}
          className="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600"
        >
          Logout
        </button>
      </div>

      <div className="grid grid-cols-1 sm:grid-cols-3 gap-6">
        <div className="bg-white p-6 rounded shadow hover:bg-blue-100 cursor-pointer text-center" onClick={() => alert("Sorry, you don't have sufficient permission.")}>
          <h2 className="text-lg font-semibold">Task & Progress</h2>
        </div>

        <div className="bg-white p-6 rounded shadow hover:bg-blue-100 cursor-pointer text-center" onClick={() => alert("Sorry, you don't have sufficient permission.")}>
          <h2 className="text-lg font-semibold">Leave & Compliances</h2>
        </div>

        <div className="bg-white p-6 rounded shadow hover:bg-blue-100 cursor-pointer text-center" onClick={() => setActiveModal("payslip")}>
          <h2 className="text-lg font-semibold">Payslips</h2>
        </div>
      </div>

      {activeModal === "payslip" && (
        <div className="fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50">
          <div className="bg-white rounded-xl shadow-2xl w-[90%] max-w-2xl p-6">
            <div className="flex justify-between items-center border-b pb-2 mb-4">
              <h2 className="text-2xl font-bold text-gray-800">Payslip</h2>
              <button
                onClick={() => setActiveModal(null)}
                className="text-gray-500 hover:text-red-600 text-xl font-bold"
              >
                âœ•
              </button>
            </div>

            <p className="text-gray-600 mb-3">Click to download your monthly payslips:</p>
            <ul className="space-y-3 max-h-[300px] overflow-y-auto pr-2">
              {payslips.map((p) => (
                <li
                  key={p.month}
                  className="flex justify-between items-center border px-4 py-2 rounded hover:bg-gray-100"
                >
                  <div>
                    <p className="font-medium text-gray-700">{p.month}</p>
                    <p className="text-sm text-gray-500">Issued on: {p.issue}</p>
                  </div>
                  <button
                    onClick={() => generatePayslip(p)}
                    className="bg-blue-600 text-white px-3 py-1.5 rounded hover:bg-blue-700 text-sm"
                  >
                    Download
                  </button>
                </li>
              ))}
            </ul>
          </div>
        </div>
      )}
    </div>
  );
}